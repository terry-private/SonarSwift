#!/bin/bash
set -e

# 環境変数のデバッグ出力
echo "⭐️Environment variables:"
echo "Current directory: $(pwd)"
echo "CI: $CI"
echo "CCI_BUILD_ID: $CI_BUILD_ID"
echo "CI_BUILD_NUMBER: $CI_BUILD_NUMBER"
echo "CI_BUILD_URL: $CI_BUILD_URL"
echo "CI_BUNDLE_ID: $CI_BUNDLE_ID"
echo "CI_COMMIT: $CI_COMMIT"
echo "CI_DERIVED_DATA_PATH: $CI_DERIVED_DATA_PATH"
echo "CI_PRIMARY_REPOSITORY_PATH: $CI_PRIMARY_REPOSITORY_PATH"
echo "CI_PRODUCT: $CI_PRODUCT"
echo "CI_PRODUCT_ID: $CI_PRODUCT_ID"
echo "CI_PRODUCT_PLATFORM: $CI_PRODUCT_PLATFORM"
echo "CI_PROJECT_FILE_PATH: $CI_PROJECT_FILE_PATH"
echo "CI_START_CONDITION: $CI_START_CONDITION"
echo "CI_TEAM_ID: $CI_TEAM_ID"
echo "CI_WORKFLOW: $CI_WORKFLOW"
echo "CI_WORKFLOW_ID: $CI_WORKFLOW_ID"
echo "CI_WORKSPACE_PATH: $CI_WORKSPACE_PATH"
echo "CI_XCODE_CLOUD: $CI_XCODE_CLOUD"
echo "CI_XCODE_PROJECT: $CI_XCODE_PROJECT"
echo "CI_XCODE_SCHEME: $CI_XCODE_SCHEME"
echo "CI_XCODEBUILD_ACTION: $CI_XCODEBUILD_ACTION"
echo "CI_XCODEBUILD_EXIT_CODE: $CI_XCODEBUILD_EXIT_CODE"
echo "CI_BRANCH: $CI_BRANCH"
echo "CI_TAG: $CI_TAG"
echo "CI_GIT_REF: $CI_GIT_REF"
echo "CI_PULL_REQUEST_HTML_URL: $CI_PULL_REQUEST_HTML_URL"
echo "CI_PULL_REQUEST_NUMBER: $CI_PULL_REQUEST_NUMBER"
echo "CI_PULL_REQUEST_SOURCE_BRANCH: $CI_PULL_REQUEST_SOURCE_BRANCH"
echo "CI_PULL_REQUEST_SOURCE_COMMIT: $CI_PULL_REQUEST_SOURCE_COMMIT"
echo "CI_PULL_REQUEST_SOURCE_REPO: $CI_PULL_REQUEST_SOURCE_REPO"
echo "CI_PULL_REQUEST_TARGET_BRANCH: $CI_PULL_REQUEST_TARGET_BRANCH"
echo "CI_PULL_REQUEST_TARGET_COMMIT: $CI_PULL_REQUEST_TARGET_COMMIT"
echo "CI_PULL_REQUEST_TARGET_REPO: $CI_PULL_REQUEST_TARGET_REPO"

echo "CI_RESULT_BUNDLE_PATH: $CI_RESULT_BUNDLE_PATH"
echo "CI_TEST_DESTINATION_DEVICE_TYPE: $CI_TEST_DESTINATION_DEVICE_TYPE"
echo "CI_TEST_DESTINATION_RUNTIME: $CI_TEST_DESTINATION_RUNTIME"
echo "CI_TEST_DESTINATION_UDID: $CI_TEST_DESTINATION_UDID"
echo "CI_TEST_PLAN: $CI_TEST_PLAN"
echo "CI_TEST_PRODUCTS_PATH: $CI_TEST_PRODUCTS_PATH"

echo "CI_AD_HOC_SIGNED_APP_PATH: $CI_AD_HOC_SIGNED_APP_PATH"
echo "CI_APP_STORE_SIGNED_APP_PATH: $CI_APP_STORE_SIGNED_APP_PATH"
echo "CI_ARCHIVE_PATH: $CI_ARCHIVE_PATH"
echo "CI_DEVELOPMENT_SIGNED_APP_PATH: $CI_DEVELOPMENT_SIGNED_APP_PATH"
echo "CI_DEVELOPER_ID_SIGNED_APP_PATH: $CI_DEVELOPER_ID_SIGNED_APP_PATH"

echo "⭐️Starting SonarCloud coverage upload process..."

# プロジェクトのルートディレクトリに移動
cd "$CI_PRIMARY_REPOSITORY_PATH"

# 複数の場所で.xcresultを検索
echo "⭐️Searching for xcresult files in multiple locations..."
SEARCH_PATHS=(
    "$CI_WORKSPACE_PATH/Logs/Test"
    "$CI_WORKSPACE_PATH/Build"
    "$CI_WORKSPACE_PATH"
)

# ファイルまたはディレクトリの存在を確認
if [ -e "$CI_RESULT_BUNDLE_PATH" ]; then
    echo "✅ ResultBundleが見つかりました: $CI_RESULT_BUNDLE_PATH"
    # オプション: ファイルの詳細情報を表示
    ls -l "$CI_RESULT_BUNDLE_PATH"
else
    echo "❌ ResultBundleが見つかりませんでした: $CI_RESULT_BUNDLE_PATH"
fi

XCRESULT_PATH="$CI_RESULT_BUNDLE_PATH"
for path in "${SEARCH_PATHS[@]}"; do
    echo "⭐️Searching in: $path"
    if [ -d "$path" ]; then
        ls -la "$path"
        FOUND_PATH=$(find "$path" -name "*.xcresult" -type d 2>/dev/null | head -n 1)
        if [ ! -z "$FOUND_PATH" ]; then
            XCRESULT_PATH="$FOUND_PATH"
            echo "⭐️⭐️⭐️Found xcresult at: $XCRESULT_PATH"
            break
        fi
    fi
done

if [ -z "$XCRESULT_PATH" ]; then
    echo "⭐️Error: No .xcresult file found. Showing directory structure:"
    echo "⭐️DerivedData contents:"
    ls -R "$CI_DERIVED_DATA_PATH"
fi
